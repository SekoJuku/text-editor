{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers\n        }); //not working\n      } catch (e) {\n        console.log(e.message);\n      }\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message() || 'Something is wrong!');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message());\n      throw e;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"Fm9nIuLef/SSnt/ds0IgtmdMsNQ=\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","e","console","log","message","data","json","ok","Error","clearError"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,WAAjB,QAAmC,OAAnC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,IAAD,CAAjC;AAEA,QAAOO,OAAO,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAWC,MAAM,GAAG,KAApB,EAA2BC,IAAI,GAAG,IAAlC,EAAwCC,OAAO,GAAG,EAAlD,KAAyD;AAClFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,UAAGM,IAAH,EAAS;AACLA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACH;;AACD,UAAI;AACA,cAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAACC,UAAAA,MAAD;AAAQC,UAAAA,IAAR;AAAaC,UAAAA;AAAb,SAAN,CAA5B,CADA,CACwD;AAC3D,OAFD,CAEE,OAAOK,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;AAEA,UAAG,CAACP,QAAQ,CAACQ,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACD,OAAL,MAAkB,qBAA5B,CAAN;AACH;;AAEDf,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOgB,IAAP;AACH,KAnBD,CAmBE,OAAOJ,CAAP,EAAU;AACRZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACU,CAAC,CAACG,OAAF,EAAD,CAAR;AACA,YAAMH,CAAN;AACH;AACJ,GA1B2B,EA0B1B,EA1B0B,CAA5B;;AA4BA,QAAMQ,UAAU,GAAG,MAAMlB,QAAQ,CAAC,IAAD,CAAjC;;AACA,SAAO;AAACH,IAAAA,OAAD;AAASI,IAAAA,OAAT;AAAkBF,IAAAA,KAAlB;AAAwBmB,IAAAA;AAAxB,GAAP;AACH,CAlCM;;GAAMtB,O","sourcesContent":["import {useState,useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n\r\n    const  request = useCallback(async (url,method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            try {\r\n                const response = await fetch(url, {method,body,headers})//not working\r\n            } catch (e) {\r\n                console.log(e.message)\r\n            }\r\n            const data = await response.json()\r\n\r\n            if(!response.ok) {\r\n                throw new Error(data.message() || 'Something is wrong!')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message())\r\n            throw e\r\n        }\r\n    },[])\r\n\r\n    const clearError = () => setError(null)\r\n    return {loading,request, error,clearError}\r\n}"]},"metadata":{},"sourceType":"module"}