{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuany\\\\WebstormProjects\\\\myproject\\\\client\\\\src\\\\pages\\\\components\\\\TextListCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState, useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextListCards = ({\n  texts\n}) => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext); //const [id,setId] = useState(null)\n\n  const [val, setVal] = useState([]);\n  const {\n    request,\n    loading\n  } = useHttp();\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n  const deleteHandler = useCallback(async id => {\n    try {\n      await request(`api/text/delete/${id}`, 'DELETE', null, {\n        Authorization: `Bearer ${token}`\n      });\n    } catch (e) {}\n  }, [request, token]);\n  const editHandler = useCallback(async (id, value) => {\n    try {\n      await request(`api/text/edit/${id}`, 'PUT', {\n        value\n      }, {\n        Authorization: `Bearer ${token}`\n      });\n    } catch (e) {}\n  }, [request, token]);\n  const changeHandler = useCallback(async id => {\n    const newVal = val;\n    newVal[id][event.target.name] = event.target.value;\n    setVal(newVal);\n  }, []);\n\n  if (!texts.length) {\n    return /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"center\",\n      children: \"No Texts. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u2116\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: texts.map((text, i) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: text._id,\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: text.value,\n              onChange: () => changeHandler(text._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-small green darken-1\",\n              style: {\n                marginRight: \"1em\",\n                marginLeft: \"1em\"\n              },\n              onClick: () => editHandler(text._id, text.value),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-small red darken-2\",\n              onClick: () => deleteHandler(text._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextListCards, \"uYkzpSMn5KvSRUeE8+w8j/KB9Rs=\", false, function () {\n  return [useHttp];\n});\n\n_c = TextListCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextListCards\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/pages/components/TextListCards.js"],"names":["React","useEffect","useCallback","useState","useContext","AuthContext","useHttp","TextListCards","texts","token","val","setVal","request","loading","window","M","updateTextFields","deleteHandler","id","Authorization","e","editHandler","value","changeHandler","newVal","event","target","name","length","map","text","i","_id","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect,useCallback,useState,useContext} from \"react\"\r\nimport {AuthContext} from \"../../context/AuthContext\"\r\nimport {useHttp} from \"../../hooks/http.hook\"\r\n\r\n\r\nexport const TextListCards = ({texts}) => {\r\n    const {token} = useContext(AuthContext)\r\n    //const [id,setId] = useState(null)\r\n    const [val,setVal] = useState([])\r\n    const {request,loading} = useHttp()\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    const deleteHandler = useCallback(async (id) => {\r\n        try {\r\n            await request(`api/text/delete/${id}`,'DELETE',null,{Authorization: `Bearer ${token}`})\r\n        } catch (e) { }\r\n    },[request,token])\r\n\r\n    const editHandler = useCallback( async  (id,value) => {\r\n        try {\r\n            await request(`api/text/edit/${id}`,'PUT',{value},{Authorization: `Bearer ${token}`})\r\n        } catch (e) { }\r\n    },[request,token])\r\n\r\n    const changeHandler = useCallback( async (id) => {\r\n        const newVal = val\r\n        newVal[id][event.target.name]= event.target.value\r\n        setVal(newVal)\r\n    },[])\r\n\r\n    if(!texts.length) {\r\n        return <h5 className=\"center\">No Texts. Create one!</h5>\r\n    }\r\n\r\n    return(\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>â„–</th>\r\n                <th>Text</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {texts.map((text,i) => {\r\n                return (\r\n                    <tr>\r\n                        <td>{i+1}</td>\r\n                        <td><input\r\n                            type=\"text\"\r\n                            value={text._id}\r\n                            hidden\r\n                        />\r\n                            <input\r\n                            type=\"text\"\r\n                            value={text.value}\r\n                            onChange={() => changeHandler(text._id)}\r\n                        /></td>\r\n                        <td>\r\n                            <button\r\n                                className=\"btn btn-small green darken-1\"\r\n                                style={{marginRight:\"1em\",marginLeft:\"1em\"}}\r\n                                onClick={() => editHandler(text._id,text.value)}\r\n                            >Edit</button>\r\n                            <button\r\n                                className=\"btn btn-small red darken-2\"\r\n                                onClick={() => deleteHandler(text._id)}\r\n                            >Delete</button>\r\n                        </td>\r\n                    </tr>\r\n\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}