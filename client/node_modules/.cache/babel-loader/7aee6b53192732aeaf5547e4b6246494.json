{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuany\\\\WebstormProjects\\\\myproject\\\\client\\\\src\\\\pages\\\\TextList.js\",\n    _s = $RefreshSig$();\n\nimport { React, useCallback, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { Loader } from \"./components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextList = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext); //const [id,setId] = useState(null)\n\n  const [texts, setTexts] = useState({});\n  const [newText, setNewText] = useState({});\n  const {} = useState({});\n  const [update, setUpdate] = useState(false);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const fetchTexts = useCallback(async () => {\n    try {\n      let fetched = await request('/api/text', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      console.log(fetched);\n      setTexts(fetched);\n    } catch (e) {}\n  }, [request, token]);\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n  useEffect(() => {\n    fetchTexts();\n  }, [fetchTexts, update]);\n\n  const changeHandler = event => {\n    let value = event.target.value;\n    setNewText({\n      change: value\n    });\n    console.log(newText);\n  };\n\n  const deleteHandler = useCallback(async id => {\n    try {\n      let data = await request(`api/text/delete/${id}`, 'DELETE', null, {\n        Authorization: `Bearer ${token}`\n      });\n    } catch (e) {}\n\n    setUpdate(!update);\n  }, [request, token, update]);\n  const editHandler = useCallback(async id => {\n    try {\n      console.log(newText);\n      await request(`api/text/edit/${id}`, 'PUT', {\n        value: `${newText['change']}`\n      }, {\n        Authorization: `Bearer ${token}`\n      });\n    } catch (e) {}\n\n    setUpdate(!update);\n  }, [request, token, update]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!texts.length) {\n    return /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"center\",\n      children: \"No Texts. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u2116\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: texts.map((text, i) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: text._id,\n              value: text.value,\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-small green darken-1\",\n              style: {\n                marginRight: \"1em\",\n                marginLeft: \"1em\"\n              },\n              onClick: event => editHandler(text._id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-small red darken-2\",\n              onClick: () => deleteHandler(text._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, text._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextList, \"lmkuEskIeoC2el8c60nimixATcI=\", false, function () {\n  return [useHttp];\n});\n\n_c = TextList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextList\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/pages/TextList.js"],"names":["React","useCallback","useState","useEffect","useContext","AuthContext","useHttp","Loader","TextList","token","texts","setTexts","newText","setNewText","update","setUpdate","request","loading","fetchTexts","fetched","Authorization","console","log","e","window","M","updateTextFields","changeHandler","event","value","target","change","deleteHandler","id","data","editHandler","length","map","text","i","_id","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import {React,useCallback,useState,useEffect,useContext} from 'react'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {Loader} from \"./components/Loader\";\r\n\r\n\r\nexport const TextList = () => {\r\n    const {token} = useContext(AuthContext)\r\n    //const [id,setId] = useState(null)\r\n    const [texts,setTexts] = useState({})\r\n    const [newText,setNewText] = useState({})\r\n    const {} = useState({})\r\n    const [update,setUpdate] = useState(false)\r\n    const {request,loading} = useHttp()\r\n\r\n    const fetchTexts = useCallback( async () => {\r\n        try {\r\n            let fetched = await request('/api/text','GET',null,{\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            console.log(fetched)\r\n            setTexts(fetched)\r\n        } catch (e) { }\r\n    },[request,token])\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        fetchTexts()\r\n    },[fetchTexts,update])\r\n\r\n\r\n    const changeHandler = (event) => {\r\n        let value = event.target.value\r\n        setNewText({\r\n            change: value\r\n        })\r\n        console.log(newText)\r\n    }\r\n\r\n    const deleteHandler = useCallback(async (id) => {\r\n        try {\r\n            let data = await request(`api/text/delete/${id}`,'DELETE',null,{Authorization: `Bearer ${token}`})\r\n        } catch (e) { }\r\n        setUpdate(!update)\r\n    },[request,token,update])\r\n\r\n    const editHandler = useCallback( async  (id) => {\r\n        try {\r\n            console.log(newText)\r\n            await request(`api/text/edit/${id}`,'PUT',{value: `${newText['change']}`},{Authorization: `Bearer ${token}`})\r\n        } catch (e) { }\r\n        setUpdate(!update)\r\n    },[request,token,update])\r\n\r\n    if(loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    if(!texts.length) {\r\n        return <h5 className=\"center\">No Texts. Create one!</h5>\r\n    }\r\n\r\n    return(\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Text</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {texts.map((text,i) => {\r\n                return (\r\n                    <tr key={text._id}>\r\n                        <td>{i+1}</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"text\"\r\n                                name={text._id}\r\n                                value={text.value}\r\n                                onChange={changeHandler}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <button\r\n                                className=\"btn btn-small green darken-1\"\r\n                                style={{marginRight:\"1em\",marginLeft:\"1em\"}}\r\n                                onClick={(event) => editHandler(text._id)}\r\n                            >Edit</button>\r\n                            <button\r\n                                className=\"btn btn-small red darken-2\"\r\n                                onClick={() => deleteHandler(text._id)}\r\n                            >Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}