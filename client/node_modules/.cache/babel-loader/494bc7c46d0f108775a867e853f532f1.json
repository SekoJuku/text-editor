{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuany\\\\WebstormProjects\\\\myproject\\\\client\\\\src\\\\pages\\\\ShowText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { Loader } from \"./components/Loader\";\nimport { TextListCards } from \"./components/TextListCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ShowText = () => {\n  _s();\n\n  const {\n    request,\n    loading\n  } = useHttp();\n  const {\n    texts,\n    setTexts\n  } = useState({\n    length: 0\n  });\n  const {\n    token\n  } = useContext(AuthContext);\n  /*const getAllTexts = useCallback(async () => {\r\n      try {\r\n          const fetched = await request('/api/text/','GET',null,{Authorization: 'Bearer '+ token})\r\n          console.log(fetched)\r\n          setTexts(fetched)\r\n          console.log()\r\n      } catch (e) { }\r\n  },[token,request])\r\n  */\n\n  /*useEffect(() => {\r\n      getAllTexts()\r\n  },[getAllTexts])\r\n  */\n\n  const getAllTexts = async () => {\n    try {\n      const fetched = await request('/api/text/', 'GET', null, {\n        Authorization: 'Bearer ' + token\n      });\n      console.log(fetched);\n      setTexts(fetched);\n      console.log(texts);\n      return fetched;\n    } catch (e) {}\n  };\n\n  const getData = () => {\n    const data = getAllTexts();\n  };\n\n  const data = getData();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  } //\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && /*#__PURE__*/_jsxDEV(TextListCards, {\n      texts: {\n        texts\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }, this)\n  }, void 0, false);\n};\n\n_s(ShowText, \"uUqaq1cMtvyhjnes7v/5/eDHQGM=\", false, function () {\n  return [useHttp];\n});\n\n_c = ShowText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowText\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/pages/ShowText.js"],"names":["React","useEffect","useState","useCallback","useContext","AuthContext","useHttp","Loader","TextListCards","ShowText","request","loading","texts","setTexts","length","token","getAllTexts","fetched","Authorization","console","log","e","getData","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,WAAjC,EAA6CC,UAA7C,QAA8D,OAA9D;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBL,OAAO,EAAlC;AACA,QAAM;AAACM,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBX,QAAQ,CAAC;AAACY,IAAAA,MAAM,EAAE;AAAT,GAAD,CAAlC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUX,UAAU,CAACC,WAAD,CAA1B;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;;AACI,QAAMW,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMP,OAAO,CAAC,YAAD,EAAe,KAAf,EAAsB,IAAtB,EAA4B;AAACQ,QAAAA,aAAa,EAAE,YAAYH;AAA5B,OAA5B,CAA7B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAJ,MAAAA,QAAQ,CAACI,OAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,aAAOK,OAAP;AACH,KAND,CAME,OAAOI,CAAP,EAAU,CACX;AACJ,GATD;;AAWA,QAAMC,OAAO,GAAG,MAAM;AAClB,UAAMC,IAAI,GAAGP,WAAW,EAAxB;AACH,GAFD;;AAIA,QAAMO,IAAI,GAAGD,OAAO,EAApB;;AAEA,MAAIX,OAAJ,EAAa;AACT,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GArCyB,CAsC9B;;;AAEI,sBACI;AAAA,cACK,CAACA,OAAD,iBAAY,QAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAACC,QAAAA;AAAD;AAAtB;AAAA;AAAA;AAAA;AAAA;AADjB,mBADJ;AAKH,CA7CM;;GAAMH,Q;UACkBH,O;;;KADlBG,Q","sourcesContent":["import React,{useEffect,useState,useCallback,useContext} from \"react\"\r\nimport {AuthContext} from \"../context/AuthContext\"\r\nimport {useHttp} from \"../hooks/http.hook\"\r\nimport {Loader} from \"./components/Loader\"\r\nimport {TextListCards} from \"./components/TextListCards\"\r\n\r\nexport const ShowText = () => {\r\n    const {request, loading} = useHttp()\r\n    const {texts, setTexts} = useState({length: 0})\r\n    const {token} = useContext(AuthContext)\r\n\r\n    /*const getAllTexts = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/text/','GET',null,{Authorization: 'Bearer '+ token})\r\n            console.log(fetched)\r\n            setTexts(fetched)\r\n            console.log()\r\n        } catch (e) { }\r\n    },[token,request])\r\n*/\r\n    /*useEffect(() => {\r\n        getAllTexts()\r\n    },[getAllTexts])\r\n*/\r\n    const getAllTexts = async () => {\r\n        try {\r\n            const fetched = await request('/api/text/', 'GET', null, {Authorization: 'Bearer ' + token})\r\n            console.log(fetched)\r\n            setTexts(fetched)\r\n            console.log(texts)\r\n            return fetched\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    const getData = () => {\r\n        const data = getAllTexts()\r\n    }\r\n\r\n    const data = getData()\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n//\r\n\r\n    return (\r\n        <>\r\n            {!loading && <TextListCards texts={{texts}}/>}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}