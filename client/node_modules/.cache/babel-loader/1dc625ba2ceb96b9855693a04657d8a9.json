{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuany\\\\WebstormProjects\\\\myproject\\\\client\\\\src\\\\pages\\\\components\\\\Text.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Text extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      const target = e.target;\n      const val = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: val\n      });\n    };\n\n    const token = JSON.parse(localStorage.getItem('userData')).token;\n    const id = this.props.item._id;\n    const value = this.props.item.value;\n    const owner = this.props.item.owner;\n    console.log(props.item._id);\n    this.state = {\n      id,\n      value,\n      owner,\n      token\n    };\n    console.log(this.value);\n  }\n\n  componentDidMount() {}\n\n  async request(url, method = 'GET', body = {}, headers = {}) {\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Request throwing is wrong!');\n      }\n\n      return data;\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  async editHandler() {\n    try {\n      fetch(). //const data = await this.request(`api/text/edit/${this.state.id}`, 'PUT', {value: `${this.state.value}`}, {Authorization: `Bearer ${this.state.token}`})\n      console.log('Editing!');\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  async deleteHandler() {\n    try {\n      const data = await this.request(`api/text/delete/${this.state.id}`, 'DELETE', null, {\n        Authorization: `Bearer ${this.state.token}`\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"value\",\n          value: this.state.value,\n          onChange: this.changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-small green darken-1\",\n          style: {\n            marginRight: \"1em\",\n            marginLeft: \"1em\"\n          },\n          onClick: this.editHandler,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-small red darken-2\",\n          onClick: this.deleteHandler,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/pages/components/Text.js"],"names":["React","Component","Text","constructor","props","changeHandler","e","target","val","value","name","setState","token","JSON","parse","localStorage","getItem","id","item","_id","owner","console","log","state","componentDidMount","request","url","method","body","headers","stringify","response","fetch","data","json","ok","Error","message","editHandler","deleteHandler","Authorization","render","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\nexport class Text extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const token = JSON.parse(localStorage.getItem('userData')).token\r\n        const id = this.props.item._id\r\n        const value = this.props.item.value\r\n        const owner = this.props.item.owner\r\n        console.log(props.item._id)\r\n        this.state = {\r\n            id,\r\n            value,\r\n            owner,\r\n            token\r\n        }\r\n        console.log(this.value)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        const target = e.target\r\n        const val = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]:val\r\n        })\r\n    }\r\n\r\n    async request(url,method = 'GET',body = {},headers = {}) {\r\n        try {\r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const response = await fetch(url, {method,body,headers})\r\n            const data = await response.json()\r\n\r\n            if(!response.ok) {\r\n                throw new Error(data.message || 'Request throwing is wrong!')\r\n            }\r\n\r\n            return data\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    async editHandler() {\r\n        try {\r\n            fetch()\r\n                .\r\n            //const data = await this.request(`api/text/edit/${this.state.id}`, 'PUT', {value: `${this.state.value}`}, {Authorization: `Bearer ${this.state.token}`})\r\n            console.log('Editing!')\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    async deleteHandler() {\r\n        try {\r\n            const data = await this.request(`api/text/delete/${this.state.id}`, 'DELETE', null, {Authorization: `Bearer ${this.state.token}`})\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>No</td>\r\n                <td>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"value\"\r\n                        value={this.state.value}\r\n                        onChange={this.changeHandler}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        className=\"btn btn-small green darken-1\"\r\n                        style={{marginRight:\"1em\",marginLeft:\"1em\"}}\r\n                        onClick={this.editHandler}\r\n                    >Edit</button>\r\n                    <button\r\n                        className=\"btn btn-small red darken-2\"\r\n                        onClick={this.deleteHandler}\r\n                    >Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}