{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuany\\\\WebstormProjects\\\\myproject\\\\client\\\\src\\\\pages\\\\ShowText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShowText = () => {\n  _s();\n\n  const {\n    request,\n    loading\n  } = useHttp();\n  const {\n    texts,\n    setTexts\n  } = useState(null);\n  const {\n    token\n  } = useContext(AuthContext);\n  const getAllTexts = useCallback();\n  const listAllTexts = useState(async () => {}, [texts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowText, \"y0kDwVT75FNGXxoYXu2XzlxXHes=\", false, function () {\n  return [useHttp];\n});\n\n_c = ShowText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowText\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/pages/ShowText.js"],"names":["React","useState","useCallback","useContext","AuthContext","useHttp","ShowText","request","loading","texts","setTexts","token","getAllTexts","listAllTexts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,WAAvB,EAAmCC,UAAnC,QAAoD,OAApD;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAoBH,OAAO,EAAjC;AACA,QAAM;AAACI,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBT,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM;AAACU,IAAAA;AAAD,MAAUR,UAAU,CAACC,WAAD,CAA1B;AAEA,QAAMQ,WAAW,GAAGV,WAAW,EAA/B;AAEA,QAAMW,YAAY,GAAGZ,QAAQ,CAAE,YAAY,CAE1C,CAF4B,EAE3B,CAACQ,KAAD,CAF2B,CAA7B;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBM;;GAAMH,Q;UACiBD,O;;;KADjBC,Q","sourcesContent":["import React,{useState,useCallback,useContext} from \"react\"\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\n\r\nexport const ShowText = () => {\r\n    const {request,loading} = useHttp()\r\n    const {texts,setTexts} = useState(null)\r\n    const {token} = useContext(AuthContext)\r\n\r\n    const getAllTexts = useCallback()\r\n\r\n    const listAllTexts = useState( async () => {\r\n\r\n    },[texts])\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}