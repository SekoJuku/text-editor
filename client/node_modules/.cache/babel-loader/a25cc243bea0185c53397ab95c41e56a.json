{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message() || 'Something is wrong!');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message());\n      throw e;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"Fm9nIuLef/SSnt/ds0IgtmdMsNQ=\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","data","json","ok","Error","message","e","clearError"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,WAAjB,QAAmC,OAAnC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,IAAD,CAAjC;AAEA,QAAOO,OAAO,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAWC,MAAM,GAAG,KAApB,EAA2BC,IAAI,GAAG,IAAlC,EAAwCC,OAAO,GAAG,EAAlD,KAAyD;AAClFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AAEA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAACC,QAAAA,MAAD;AAAQC,QAAAA,IAAR;AAAaC,QAAAA;AAAb,OAAN,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAG,CAACH,QAAQ,CAACI,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,MAAkB,qBAA5B,CAAN;AACH;;AAEDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOU,IAAP;AACH,KAZD,CAYE,OAAOK,CAAP,EAAU;AACRf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACa,CAAC,CAACD,OAAF,EAAD,CAAR;AACA,YAAMC,CAAN;AACH;AACJ,GAnB2B,EAmB1B,EAnB0B,CAA5B;;AAqBA,QAAMC,UAAU,GAAG,MAAMd,QAAQ,CAAC,IAAD,CAAjC;;AACA,SAAO;AAACH,IAAAA,OAAD;AAASI,IAAAA,OAAT;AAAkBF,IAAAA,KAAlB;AAAwBe,IAAAA;AAAxB,GAAP;AACH,CA3BM;;GAAMlB,O","sourcesContent":["import {useState,useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n\r\n    const  request = useCallback(async (url,method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            \r\n            const response = await fetch(url, {method,body,headers})\r\n            const data = await response.json()\r\n\r\n            if(!response.ok) {\r\n                throw new Error(data.message() || 'Something is wrong!')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message())\r\n            throw e\r\n        }\r\n    },[])\r\n\r\n    const clearError = () => setError(null)\r\n    return {loading,request, error,clearError}\r\n}"]},"metadata":{},"sourceType":"module"}