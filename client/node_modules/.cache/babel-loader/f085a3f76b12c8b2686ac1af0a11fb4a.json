{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuany\\\\WebstormProjects\\\\myproject\\\\client\\\\src\\\\pages\\\\TextList.js\",\n    _s = $RefreshSig$();\n\nimport { React, useCallback, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { HookingText } from \"./components/HookingText\";\nimport { Loader } from \"./components/Loader\";\nimport { Text } from \"./components/Text\";\nimport { Text1 } from \"./components/Text1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextList = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext); //const [id,setId] = useState(null)\n\n  const [texts, setTexts] = useState({});\n  const {\n    request,\n    loading\n  } = useHttp();\n  const [newText, setNewText] = useState({});\n  const [update, setUpdate] = useState(false);\n  const fetchTexts = useCallback(async () => {\n    try {\n      let fetched = await request('/api/text', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      console.log(fetched);\n      setTexts(fetched);\n    } catch (e) {}\n  }, [request, token]);\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n  useEffect(() => {\n    fetchTexts();\n  }, [fetchTexts, update]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!texts.length) {\n    return /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"center\",\n      children: \"No Texts. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u2116\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: texts.map((text, i) => {\n        return /*#__PURE__*/_jsxDEV(Text1, {\n          item: text,\n          i: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextList, \"f85mbgoqJvNI8jxlxZ+JYSoibS4=\", false, function () {\n  return [useHttp];\n});\n\n_c = TextList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextList\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/pages/TextList.js"],"names":["React","useCallback","useState","useEffect","useContext","AuthContext","useHttp","HookingText","Loader","Text","Text1","TextList","token","texts","setTexts","request","loading","newText","setNewText","update","setUpdate","fetchTexts","fetched","Authorization","console","log","e","window","M","updateTextFields","length","map","text","i"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,WAAd,EAA0BC,QAA1B,EAAmCC,SAAnC,EAA6CC,UAA7C,QAA8D,OAA9D;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,KAAR,QAAoB,oBAApB;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAUR,UAAU,CAACC,WAAD,CAA1B,CAD0B,CAE1B;;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAACa,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAoBV,OAAO,EAAjC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAuBhB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACiB,MAAD,EAAQC,SAAR,IAAqBlB,QAAQ,CAAC,KAAD,CAAnC;AAGA,QAAMmB,UAAU,GAAGpB,WAAW,CAAE,YAAY;AACxC,QAAI;AACA,UAAIqB,OAAO,GAAG,MAAMP,OAAO,CAAC,WAAD,EAAa,KAAb,EAAmB,IAAnB,EAAwB;AAC/CQ,QAAAA,aAAa,EAAG,UAASX,KAAM;AADgB,OAAxB,CAA3B;AAGAY,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAR,MAAAA,QAAQ,CAACQ,OAAD,CAAR;AACH,KAND,CAME,OAAOI,CAAP,EAAU,CAAG;AAClB,GAR6B,EAQ5B,CAACX,OAAD,EAASH,KAAT,CAR4B,CAA9B;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,MAAM,CAACC,CAAP,CAASC,gBAAT;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,UAAU;AACb,GAFQ,EAEP,CAACA,UAAD,EAAYF,MAAZ,CAFO,CAAT;;AAIA,MAAGH,OAAH,EAAY;AACR,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAG,CAACH,KAAK,CAACiB,MAAV,EAAkB;AACd,wBAAO;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAA,6BACA;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,gBACCjB,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAMC,CAAN,KAAY;AACnB,4BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAED,IAAb;AAAmB,UAAA,CAAC,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtDM;;GAAMtB,Q;UAIiBL,O;;;KAJjBK,Q","sourcesContent":["import {React,useCallback,useState,useEffect,useContext} from 'react'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {HookingText} from \"./components/HookingText\";\r\nimport {Loader} from \"./components/Loader\";\r\nimport {Text} from \"./components/Text\";\r\nimport {Text1} from \"./components/Text1\"\r\n\r\n\r\nexport const TextList = () => {\r\n    const {token} = useContext(AuthContext)\r\n    //const [id,setId] = useState(null)\r\n    const [texts,setTexts] = useState({})\r\n    const {request,loading} = useHttp()\r\n    const [newText,setNewText] = useState({})\r\n    const [update,setUpdate] = useState(false)\r\n\r\n\r\n    const fetchTexts = useCallback( async () => {\r\n        try {\r\n            let fetched = await request('/api/text','GET',null,{\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            console.log(fetched)\r\n            setTexts(fetched)\r\n        } catch (e) { }\r\n    },[request,token])\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        fetchTexts()\r\n    },[fetchTexts,update])\r\n\r\n    if(loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    if(!texts.length) {\r\n        return <h5 className=\"center\">No Texts. Create one!</h5>\r\n    }\r\n\r\n    return(\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>â„–</th>\r\n                <th>Text</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {texts.map((text,i) => {\r\n                return (\r\n                    <Text1 item={text} i={i} />\r\n                )\r\n            })\r\n            }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}