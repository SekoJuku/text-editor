{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuany\\\\WebstormProjects\\\\myproject\\\\client\\\\src\\\\pages\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Editable from \"./components/Editable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Test = () => {\n  _s();\n\n  // State for the input\n  const [task, setTask] = useState(\"\");\n  /*\r\n    Enclose the input element as the children to the Editable component to make it as inline editable.\r\n  */\n\n  const HandleChange = e => {\n    setTask(e.target.value);\n    console.log(task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    name: \"task\",\n    placeholder: \"Write a task name\",\n    value: task,\n    onChange: e => HandleChange(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Test, \"68Y0odjr5YYZ1eMe5aWHrdIJ63Q=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/kuany/WebstormProjects/myproject/client/src/pages/Test.js"],"names":["React","useState","Editable","Test","task","setTask","HandleChange","e","target","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEA;AACJ;AACA;;AAEI,QAAMK,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACH,GAHD;;AAKA,sBAEQ;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,mBAHhB;AAII,IAAA,KAAK,EAAEA,IAJX;AAKI,IAAA,QAAQ,EAAEG,CAAC,IAAID,YAAY,CAACC,CAAD;AAL/B;AAAA;AAAA;AAAA;AAAA,UAFR;AAUH,CAvBM;;GAAMJ,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\r\nimport Editable from \"./components/Editable\";\r\n\r\nexport const Test = () => {\r\n    // State for the input\r\n    const [task, setTask] = useState(\"\");\r\n\r\n    /*\r\n      Enclose the input element as the children to the Editable component to make it as inline editable.\r\n    */\r\n\r\n    const HandleChange = (e) => {\r\n        setTask(e.target.value)\r\n        console.log(task)\r\n    }\r\n\r\n    return (\r\n\r\n            <input\r\n                type=\"text\"\r\n                name=\"task\"\r\n                placeholder=\"Write a task name\"\r\n                value={task}\r\n                onChange={e => HandleChange(e)}\r\n            />\r\n            );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}